<UserControl x:Class="AquaAssist.View.SensorView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:AquaAssist.View"
             xmlns:converters="clr-namespace:AquaAssist.Converters"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:lvc="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf"
             xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
             mc:Ignorable="d" 
             MinHeight="400" 
             MinWidth="500" 
             Width="{Binding Width}"
             Height="{Binding Height}">
    <UserControl.Resources>

        <converters:BoolToVisibilityConverter x:Key="bool2Visibility"></converters:BoolToVisibilityConverter>
        <Style TargetType="TextBlock" x:Key="sensorTitleStyle">
            <Style.Setters>
                <Setter Property="Foreground" Value="{DynamicResource AccentColorBrush}"></Setter>
                <Setter Property="FontSize" Value="20"></Setter>
                <Setter Property="FontWeight" Value="DemiBold"></Setter>
            </Style.Setters>
        </Style>
        <Style TargetType="TextBlock" x:Key="sensorUnitStyle">
            <Style.Setters>
                <Setter Property="Foreground" Value="{DynamicResource AccentColorBrush}"></Setter>
                <Setter Property="FontSize" Value="20"></Setter>
                <Setter Property="FontWeight" Value="DemiBold"></Setter>
            </Style.Setters>
        </Style>
    </UserControl.Resources>
    <Grid Margin="15 15 0 0" Background="{DynamicResource ControlBackgroundBrush}">
    <Grid>
        <Grid.Effect>
            <DropShadowEffect BlurRadius="15" Direction="-90" RenderingBias="Quality" Opacity=".2" ShadowDepth="1"/>
        </Grid.Effect>
        <Grid.OpacityMask>
            <VisualBrush Visual="{Binding ElementName=Border1}" />
        </Grid.OpacityMask>
        <Grid.Resources>
            <Style TargetType="lvc:LineSeries">
                <Setter Property="StrokeThickness" Value="3"></Setter>
                <Setter Property="Stroke" Value="White"></Setter>
                <Setter Property="Fill" Value="#4EFFFFFF"></Setter>
                <Setter Property="PointGeometrySize" Value="0"></Setter>
                <Setter Property="LineSmoothness" Value="1"></Setter>
            </Style>
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="Auto" MinHeight="100"></RowDefinition>
        </Grid.RowDefinitions>
        <Border x:Name="Border1" Grid.Row="0" Grid.RowSpan="4" CornerRadius="5" Background="White" />
        <Border Grid.Row="0" Grid.RowSpan="3" Background="{Binding BackgroundBrush}" ></Border>
        <TextBlock Grid.Row="0" Text="{Binding Sensor.SensorName}" TextAlignment="Center" Padding="10, 10, 0, 5" Foreground="White" FontSize="18"/>
            <TextBlock Grid.Row="1" 
                       Text="{Binding LastUpdateTs, StringFormat='{}{0:yyyy/MM/dd a\\t hh:mm:ss}'}" 
                       TextAlignment="Center" Foreground="#59FFFFFF" Padding="0,0,0,20"></TextBlock>
        <lvc:CartesianChart Grid.Row="2" Margin="3" 
                                Series="{Binding DisplaySeries}" 
                                Hoverable="False" DataTooltip="{x:Null}">
            <lvc:CartesianChart.AxisY>
                <lvc:Axis ShowLabels="True" Foreground="White"></lvc:Axis>
            </lvc:CartesianChart.AxisY>
            <lvc:CartesianChart.AxisX>
                <lvc:Axis Title="Time" ShowLabels="True" LabelsRotation="70" Foreground="White" Labels="{Binding Labels, UpdateSourceTrigger=PropertyChanged}">
                    <lvc:Axis.Separator>
                        <lvc:Separator Step="1"></lvc:Separator>
                    </lvc:Axis.Separator>
                </lvc:Axis>
            </lvc:CartesianChart.AxisX>
        </lvc:CartesianChart>

            <Grid Grid.Row="3"
                  Margin="25, 0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition></ColumnDefinition>
                    <ColumnDefinition></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <StackPanel VerticalAlignment="Center"
                            Grid.Column="0">
                    <TextBlock Text="{Binding Sensor.Description}" Opacity=".4" FontSize="13"></TextBlock>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Foreground="#303030" FontSize="40" Text="{Binding CurrentValue, StringFormat={}{0:N1}}" />
                        <TextBlock Text="{Binding Sensor.Unit}" Foreground="#303030" FontSize="18" VerticalAlignment="Bottom" Margin="8, 6"/>
                    </StackPanel>
                </StackPanel>
                
            </Grid>
            <Button  Grid.Column="1"
                     Grid.Row="3"
                     HorizontalAlignment="Right" 
                     VerticalAlignment="Bottom" 
                     Margin="10" 
                     BorderThickness="0" 
                     Background="{DynamicResource ControlBackgroundBrush}" 
                     Command="{Binding ExpandCommand}">
                <iconPacks:PackIconFontAwesome Kind="ExpandSolid"/>
            </Button>
        </Grid>

        <Grid Name="gridLoadingScreen" Visibility="{Binding IsLoading, Converter={StaticResource bool2Visibility}}">
            <Border BorderThickness="0" Background="{DynamicResource ControlBackgroundBrush}" Opacity=".5"/>
            <Controls:ProgressRing></Controls:ProgressRing>
        </Grid>
        <iconPacks:PackIconModern Kind="Disconnect" 
                                  Width="30"
                                  Height="30"                                  
                                  Margin="10, 10, 0, 0">
            <iconPacks:PackIconModern.Style>
                <Style TargetType="{x:Type iconPacks:PackIconModern}">
                    <Setter Property="Visibility" Value="Collapsed"></Setter>
                    <Setter Property="Foreground" Value="{DynamicResource WhiteBrush}"></Setter>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsNetworkError}" Value="True">
                            <Setter Property="Visibility" Value="Visible"></Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </iconPacks:PackIconModern.Style>
        </iconPacks:PackIconModern>
    </Grid>
</UserControl>
